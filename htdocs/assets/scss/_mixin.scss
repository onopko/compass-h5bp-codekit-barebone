/* ==================================================================
 *
 * MIXIN
 *
 * ------------------------------------------------------------------
 *
 *
 *
 * ------------------------------------------------------------------ */

/* ==================================================================
 * REM Font Size
 * ------------------------------------------------------------------ */

@mixin font-size ($size) {
    @include output-rhythm(font-size, convert-length($size, $rhythm-unit));
}


/* ==================================================================
 * Font Smoothing
 * ------------------------------------------------------------------ */

@mixin font-smoothing ($_mode: true) {
    @if $_mode == true {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    } @else {
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: unset;
    }
}


/* ==================================================================
 * Font Feature Settings
 * ------------------------------------------------------------------ */

@mixin font-feature-settings ($_mode: 'kern') {
	-webkit-font-feature-settings: '#{$_mode}';
	-moz-font-feature-settings: '#{$_mode}=1';
	-moz-font-feature-settings: '#{$_mode}';
	-ms-font-feature-settings: '#{$_mode}' 1;
	font-feature-settings: '#{$_mode}';
}


/* ==================================================================
 * Responsive Layout
 * ------------------------------------------------------------------ */

@mixin mq--pc {
    @media only screen and (min-width: #{$bp--sp-max + 1}px) {
        @content;
    }
}

@mixin mq--pc-s {
    @media only screen and (min-width: #{$bp--sp-max + 1}px) and (max-width: #{$bp--pc-min}px) {
        @content;
    }
}

@mixin mq--pc-l {
    @media only screen and (min-width: #{$bp--pc-max + 1}px) {
        @content;
    }
}

@mixin mq--sp {
    @media only screen and (min-device-width: #{$bp--sp-min}px) and (max-width: #{$bp--sp-max}px) {
        @content;
    }
}


/* ==================================================================
 * Media Queries Shrink Ordert Control
 * 圧縮時に意図したとおりに @media のカスケードが機能するよう CSS 最前で出力
 * ------------------------------------------------------------------ */

@include mq--pc {
	body { width: 100%; }
}
@include mq--pc-s {
	body { width: 100%; }
}
@include mq--pc-l {
	body { width: 100%; }
}
@media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
    body { width: 100%; }
}
@include mq--sp {
	body { width: 100%; }
}


/* ==================================================================
 * PC
 * ------------------------------------------------------------------ */

@mixin pc ($_map) {
    @include mq--pc {
    	@each $property, $value in $_map {
    		#{$property}: cal--pc($value);
        }
    }
	@include mq--pc-s {
		@each $property, $value in $_map {
			#{$property}: cal--pc-min($value);
	    }
	}
	@include mq--pc-l {
		@each $property, $value in $_map {
			#{$property}: cal--pc-max($value);
	    }
	}
}

@mixin pc-only-min ($_map) {
    @include mq--pc {
    	@each $property, $value in $_map {
    		#{$property}: cal--pc($value);
        }
    }
	@include mq--pc-s {
		@each $property, $value in $_map {
			#{$property}: cal--pc-min($value);
	    }
	}
}

@mixin pc-only-max ($_map) {
    @include mq--pc {
    	@each $property, $value in $_map {
    		#{$property}: cal--pc($value);
        }
    }
	@include mq--pc-l {
		@each $property, $value in $_map {
			#{$property}: cal--pc-min($value);
	    }
	}
}


/* ==================================================================
 * SP
 * ------------------------------------------------------------------ */

@mixin sp ($_map) {
    @include mq--sp {
    	@each $property, $value in $_map {
    		#{$property}: cal--sp($value);
        }
    }
}


/* ==================================================================
 * Calcurate vw
 * ------------------------------------------------------------------ */

@function cal--pc($_val) {
    @return 1vw * ($_val / $width--base-pc * 100);
}

@function cal--pc-min($_val) {
    @return 1px * ($_val * 0.5 * ($bp--pc-min / $width--base-pc));
}

@function cal--pc-max($_val) {
    @return 1px * ($_val * 0.5 * ($bp--pc-max / $width--base-pc));
}

@function cal--sp($_val) {
    @return 1vw * ($_val / $width--base-sp * 100);
}


/* ==================================================================
 * CSS Image Sprite
 * ------------------------------------------------------------------ */

@mixin sprite ($_src, $_src_2x, $_width, $_height, $_left, $_top, $_display: block) {
    display: $_display;

    width: $_width;
    height: $_height;

    background-image: image-url($_src);
    background-repeat: no-repeat;
    background-position: $_left $_top;
    @if $_src_2x != false {
        @media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
            background-image: image-url($_src_2x);
            -webkit-background-size: round(image-width($_src_2x)/2) round(image-height($_src_2x)/2);
                    background-size: round(image-width($_src_2x)/2) round(image-height($_src_2x)/2);
        }
    }
}


/* ==================================================================
 * Vertical Middle
 * ------------------------------------------------------------------ */

@mixin verticalMiddle ($_h) {
	height: $_h;
	vertical-align: middle;
	line-height: $_h;
}


/* ==================================================================
 * Line Clamp
 * ------------------------------------------------------------------ */

@mixin line-clamp ($_line) {
	display: -webkit-box;

	-webkit-box-orient: vertical;
	-webkit-line-clamp: $_line;
}


/* ==================================================================
 * hover
 * ------------------------------------------------------------------ */

@mixin hover () {
	@at-root .no-touch &:hover {
		@content;
	}

	@at-root .touch &.hover {
		@content;
	}
}


/* ==================================================================
 * CSS Animation
 * ------------------------------------------------------------------ */

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}

	@-moz-keyframes #{$animation-name} {
		@content;
	}

	@-ms-keyframes #{$animation-name} {
		@content;
	}

	@-o-keyframes #{$animation-name} {
		@content;
	}

	@keyframes #{$animation-name} {
		@content;
	}
}


/* ==================================================================
 * Image Rendering
 * https://builtvisible.com/image-scaling-in-css/
 * ------------------------------------------------------------------ */

@mixin image-crisp($_bool: true) {
	@if $_bool == true {
		-ms-interpolation-mode: nearest-neighbor;

		image-rendering: -webkit-optimize-contrast;
		image-rendering: -webkit-crisp-edges;
		image-rendering: -moz-crisp-edges;
		image-rendering: -o-crisp-edges;
		image-rendering: crisp-edges;
	}
	@else {
		-ms-interpolation-mode: bicubic;

		image-rendering: auto;
	}
}


/* ==================================================================
 * Link Color
 * ------------------------------------------------------------------ */

@mixin link-color ($_color: 'black') {
    @if $_color == 'black' {
		@include hover {
			color: $color--gray;
		}
		&:link,
		&:visited {
			color: $color--black;
		}
		&:active {
			color: $color--gray;
		}
    }
}


/* ==================================================================
 *
 * Extender
 *
 * ------------------------------------------------------------------ */

%cover {
	background-position: center center;
	background-size: cover;
	background-repeat: no-repeat;
}

%text-antialias {
    @at-root .ua-desktop-windows & {
        transform: rotate(0.03deg);
    }
}

%scrolling  {
	-webkit-overflow-scrolling: touch;

	-ms-overflow-style: none;
	-ms-scroll-chaining: none;
	overscroll-behavior: contain;
	will-change: scroll-position;
}
