/* ==================================================================
 *
 * MIXIN
 *
 * ------------------------------------------------------------------
 *
 *
 *
 * ------------------------------------------------------------------ */

/* ==================================================================
 * REM Font Size
 * ------------------------------------------------------------------ */

@mixin compass-font-size ($size) {
    @include output-rhythm(font-size, convert-length($size, $rhythm-unit));
}


/* ==================================================================
 * Font Smoothing
 * ------------------------------------------------------------------ */

@mixin font-smoothing ($_mode: true) {
    @if $_mode == true {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    } @else {
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: unset;
    }
}


/* ==================================================================
 * Font Feature Settings
 * ------------------------------------------------------------------ */

@mixin font-feature-settings ($_mode: 'kern') {
    font-feature-settings: '#{$_mode}' 1;
    -webkit-font-feature-settings: '#{$_mode}' 1;
}


/* ==================================================================
 * Responsive Layout
 * ------------------------------------------------------------------ */

@mixin mq--pc {
    @media only screen and (min-width: 641px) and (min-device-width: 768px) {
        @content;
    }
}

@mixin mq--sp {
    @media only screen and (min-device-width: 320px) and (max-device-width: 640px), (max-width: 640px) {
        @content;
    }

	@media only screen and (min-device-width: 320px) and (max-device-width: 767px) and (orientation: landscape) {
        @content;
    }
}


/* ==================================================================
 * CSS Image Sprite
 * ------------------------------------------------------------------ */

@mixin sprite ($_src, $_src_2x, $_width, $_height, $_left, $_top, $_display: block) {
    display: $_display;

    width: $_width;
    height: $_height;

    background-image: image-url($_src);
    background-repeat: no-repeat;
    background-position: $_left $_top;
    @if $_src_2x != false {
        @media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
            background-image: image-url($_src_2x);
            -webkit-background-size: round(image-width($_src_2x)/2) round(image-height($_src_2x)/2);
                    background-size: round(image-width($_src_2x)/2) round(image-height($_src_2x)/2);
        }
    }
}


/* ==================================================================
 * Vertical Middle
 * ------------------------------------------------------------------ */

@mixin verticalMiddle ($_h) {
	height: $_h;
	vertical-align: middle;
	line-height: $_h;
}


/* ==================================================================
 * Line Clamp
 * ------------------------------------------------------------------ */

@mixin line-clamp ($_line) {
	display: -webkit-box;

	-webkit-box-orient: vertical;
	-webkit-line-clamp: $_line;
}


/* ==================================================================
 * hover
 * ------------------------------------------------------------------ */

@mixin hover () {
	@at-root .no-touch &:hover {
		@content;
	}

	@at-root .touch &.hover {
		@content;
	}
}


/* ==================================================================
 * CSS Animation
 * ------------------------------------------------------------------ */

// duration     Specifies how many seconds or milliseconds an animation takes to complete one cycle. Default 0
// delay        Specifies when the animation will start. Default 0
// function     Describes how the animation will progress over one cycle of its duration. Default "ease"
// count        Specifies the number of times an animation is played. Default 1
// fill-mode    Specifies if the effects of an animation are before the animation starts and after it ends.
// visibility   Determines whether or not a transformed element is visible when it is not facing the screen.

@mixin count($count: 1) {
  -webkit-animation-iteration-count: $count;
     -moz-animation-iteration-count: $count;
      -ms-animation-iteration-count: $count;
          animation-iteration-count: $count;
}

@mixin duration($duration: 1s) {
  -webkit-animation-duration: $duration;
     -moz-animation-duration: $duration;
      -ms-animation-duration: $duration;
          animation-duration: $duration;
}

@mixin delay($delay: .2s) {
  -webkit-animation-delay: $delay;
     -moz-animation-delay: $delay;
      -ms-animation-delay: $delay;
          animation-delay: $delay;
}

@mixin function($function: ease) {
  -webkit-animation-timing-function: $function;
     -moz-animation-timing-function: $function;
      -ms-animation-timing-function: $function;
          animation-timing-function: $function;
}

@mixin fill-mode($fill: both) {
  -webkit-animation-fill-mode: $fill;
     -moz-animation-fill-mode: $fill;
      -ms-animation-fill-mode: $fill;
          animation-fill-mode: $fill;
}

@mixin animation-name($animation-name) {
  -webkit-animation-name: $animation-name;
     -moz-animation-name: $animation-name;
      -ms-animation-name: $animation-name;
          animation-name: $animation-name;
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}

	@-moz-keyframes #{$animation-name} {
		@content;
	}

	@-ms-keyframes #{$animation-name} {
		@content;
	}

	@-o-keyframes #{$animation-name} {
		@content;
	}

	@keyframes #{$animation-name} {
		@content;
	}
}


/* ==================================================================
 * Image Rendering
 * ------------------------------------------------------------------ */

// https://gehrcke.de/2014/11/css-crispy-downscaled-images/
@mixin image-crisp () {
	image-rendering: -moz-crisp-edges;
	image-rendering: -o-crisp-edges;
	image-rendering: -webkit-optimize-contrast;
	-ms-interpolation-mode: nearest-neighbor;
}

// https://builtvisible.com/image-scaling-in-css/
@mixin image-pixelated () {
	-ms-interpolation-mode: nearest-neighbor; // IE 7+ (non-standard property)
	image-rendering: -webkit-optimize-contrast; // Safari 6, UC Browser 9.9
	image-rendering: -webkit-crisp-edges; // Safari 7+
	image-rendering: -moz-crisp-edges; // Firefox 3.6+
	image-rendering: -o-crisp-edges; // Opera 12
	image-rendering: pixelated; // Chrome 41+ and Opera 26+
}
